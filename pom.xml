<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <!-- Spring IO Platform is the parent of the application to be able to
    use Spring Boot and all its default configuration -->
    <parent>
        <groupId>io.spring.platform</groupId>
        <artifactId>platform-bom</artifactId>
        <version>Brussels-RELEASE</version>
        <relativePath/>
    </parent>

    <modelVersion>4.0.0</modelVersion>
    <groupId>io.hexagon</groupId>
    <artifactId>hexagon-bom</artifactId>
    <version>1.0-SNAPSHOT</version>
    <name>hexagon-bom</name>

    <packaging>pom</packaging>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <springlets.version>1.0.0.RELEASE</springlets.version>
        <springfox-swagger.version>2.6.1</springfox-swagger.version>
        <ebean.version>10.1.4</ebean.version>
        <ebean-querybean.version>10.1.1</ebean-querybean.version>
        <ebean-spring-txn.version>10.1.1</ebean-spring-txn.version>
        <ebean-querybean-generator.version>10.1.2</ebean-querybean-generator.version>
        <ebean-maven-plugin.args>debug=0</ebean-maven-plugin.args>
        <okhttp.version>2.7.5</okhttp.version>
        <poi.version>3.16</poi.version>
    </properties>

    <modules>
        <module>hexagon-ddd</module>
    </modules>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>io.hexagon</groupId>
                <artifactId>hexagon-ddd</artifactId>
                <version>1.0-SNAPSHOT</version>
            </dependency>
            <dependency>
                <groupId>io.hexagon</groupId>
                <artifactId>hexagon-repository</artifactId>
                <version>1.0-SNAPSHOT</version>
            </dependency>

            <!-- SPRINGLETS -->
            <dependency>
                <groupId>io.springlets</groupId>
                <artifactId>springlets-boot-starter-web</artifactId>
                <version>${springlets.version}</version>
            </dependency>
            <!-- /SPRINGLETS -->

            <!-- SPRINGFOX SWAGGER(API生成) -->
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger-ui</artifactId>
                <version>${springfox-swagger.version}</version>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>${springfox-swagger.version}</version>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-bean-validators</artifactId>
                <version>${springfox-swagger.version}</version>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-staticdocs</artifactId>
                <version>${springfox-swagger.version}</version>
                <scope>test</scope>
            </dependency>
            <!-- /SPRINGFOX SWAGGER(API生成) -->

            <!-- EBEAN(ORM) -->
            <dependency>
                <groupId>org.hibernate.javax.persistence</groupId>
                <artifactId>hibernate-jpa-2.1-api</artifactId>
                <version>1.0.0.Final</version>
            </dependency>
            <dependency>
                <groupId>io.ebean</groupId>
                <artifactId>ebean</artifactId>
                <version>${ebean.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>io.ebean</groupId>
                        <artifactId>persistence-api</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!-- support for query beans -->
            <dependency>
                <groupId>io.ebean</groupId>
                <artifactId>ebean-querybean</artifactId>
                <version>${ebean.querybean.version}</version>
            </dependency>
            <!-- java annotation processor to generate query beans -->
            <dependency>
                <groupId>io.ebean</groupId>
                <artifactId>querybean-generator</artifactId>
                <version>${ebean-querybean-generator.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>io.ebean</groupId>
                <artifactId>ebean-spring-txn</artifactId>
                <version>${ebean-spring-txn.version}</version>
            </dependency>
            <!-- /EBEAN(ORM) -->

            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi</artifactId>
                <version>${poi.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi-ooxml</artifactId>
                <version>${poi.version}</version>
            </dependency>

            <!-- OKHTTP -->
            <dependency>
                <groupId>com.squareup.okhttp</groupId>
                <artifactId>okhttp</artifactId>
                <version>2.7.5</version>
            </dependency>
            <!-- /OKHTTP -->

        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <!--
                    比较常用的打包命令
                    mvn clean package spring-boot:repackage
                    只有使用下面的maven命令在cmd窗口启动，
                    热加载才能生效，如果直接Run运行的Application是
                    不支持热加载的
                    mvn clean spring-boot:run
                    -->
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <configuration>
                        <!--指定监听的端口号-->
                        <!--
                        <jvmArguments>
                            -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=7777
                        </jvmArguments>
                        -->
                    </configuration>
                    <dependencies>
                        <!--引入springloaded来实现动态加载-->
                        <dependency>
                            <groupId>org.springframework</groupId>
                            <artifactId>springloaded</artifactId>
                            <version>1.2.3.RELEASE</version>
                        </dependency>
                    </dependencies>
                    <executions>
                        <execution>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                            <configuration>
                                <classifier>exec</classifier>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>io.repaint.maven</groupId>
                    <artifactId>tiles-maven-plugin</artifactId>
                    <version>2.8</version>
                    <extensions>true</extensions>
                    <configuration>
                        <tiles>
                            <tile>org.avaje.tile:java-compile:1.1</tile>
                            <tile>io.ebean.tile:enhancement:2.4</tile>
                        </tiles>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>